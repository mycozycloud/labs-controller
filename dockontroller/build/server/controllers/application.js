// Generated by CoffeeScript 1.7.1
var DockerCommander, commander, install, utils;

DockerCommander = require('../lib/controller');

utils = require('../middlewares/utils');

commander = new DockerCommander();

install = function(name, app, cb) {
  if (!commander.exist(name)) {
    if (name === 'home' || name === 'proxy' || name === 'datasystem') {
      app.password = utils.getToken();
    }
    return commander.installApplication("mycozycloud/" + name, name, {
      env: [
        {
          'name': name,
          'token': app.password
        }
      ]
    }, (function(_this) {
      return function(err) {
        return cb(err);
      };
    })(this));
  } else {
    return cb();
  }
};

module.exports.start = function(req, res, next) {
  var app, name;
  app = req.body.start;
  name = app.name;
  return install(name, app, (function(_this) {
    return function(err) {
      if (err != null) {
        next(err);
      }
      switch (name) {
        case 'data-system':
          return commander.startDataSystem(function(err) {
            if (err != null) {
              next(err);
            }
            return res.send(200, app);
          });
        case 'couchdb':
          return commander.startCouch(function(err) {
            if (err != null) {
              next(err);
            }
            return res.send(200, app);
          });
        case 'proxy':
          return commander.startProxy(function(err, app) {
            if (err != null) {
              next(err);
            }
            return res.send(200, app);
          });
        default:
          return commander.startApplication(name, function(err, image, port) {
            if (err != null) {
              next(err);
            }
            app.port = port;
            return res.send(200, app);
          });
      }
    };
  })(this));
};

module.exports.stop = function(req, res, next) {
  var app;
  app = req.body.stop;
  if (commander.exist(app.name)) {
    return commander.stop(app.name, function(err, image) {
      if (err != null) {
        next(err);
      }
      return res.send(200, {});
    });
  } else {
    return res.send(404, {});
  }
};

module.exports.clean = function(req, res, next) {
  var app;
  app = req.body;
  if (commander.exist(app.name)) {
    return commander.uninstallApplication(app.name, function(err) {
      if (err != null) {
        next(err);
      }
      return res.send(200, {});
    });
  } else {
    return res.send(404, {});
  }
};
